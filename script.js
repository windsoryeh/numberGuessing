function generate(number) {
    let currlist = document.getElementById("list")
    if (String(Number(String(number))) === "NaN" || parseInt(number) !== number){
        clearInput()
        let beginning = Number(document.getElementById("minimum").value);
        let ending = Number(document.getElementById("maximum").value);
        if (ending < beginning) {
            currlist.innerHTML = `<p class="red">Invalid range: maximum must be greater than or equal to minimum.</p><hr>` + currlist.innerHTML;
            return;
        }
        else{
            let difficulty = ending - beginning + 1;

            let answer = beginning + Math.floor(Math.random() * difficulty);

            window.answer = answer
            console.log(window.answer);

            if (beginning == ending){
                currlist.innerHTML = `<p class="green">The answer is obviously ${answer}. You are an absolute cheater.</p><hr>` + currlist.innerHTML;

            }
            else currlist.innerHTML = `<p class="green">A new number between ${beginning} and ${ending} (including) has been generated.</p><hr>` + currlist.innerHTML;

        }
        window.relationsMax = ending
        window.relationsMin = beginning
        window.tries = 0
        relations();
    }
    else {
        window.answer = number
        console.log(`Answer has been overwritten to ${answer}`)
        currlist.innerHTML = `<p class="green">A new number has been generated by a user manually.</p><hr>` + currlist.innerHTML;
    }
}

window.onload = generate()

function solve(){
    let input = Number(document.getElementById("input").value);
    window.tries += 1
    let currlist = document.getElementById("list")
    let list = [" is too large." , " is too small." , " is the correct answer."]

    if (input > window.answer){
        currlist.innerHTML = `Trial #${window.tries}: ${input + list[0]}` + `<br>` + currlist.innerHTML;
        if (input <= window.relationsMax){
            window.relationsMax = input - 1
        }
    }
    else if (input < window.answer){
        currlist.innerHTML = `Trial #${window.tries}: ${input + list[1]}` + `<br>` + currlist.innerHTML;
        if (input >= window.relationsMin){
            window.relationsMin = input + 1
        }
     }
    else{
        currlist.innerHTML = `<p class="blue">Trial #${window.tries}: ${input + list[2]}</p>` + `<br>` + currlist.innerHTML;
        generate()
    }
    relations();
}

function enterGenerate(){
    if(event.keyCode == 13) {
        generate();
    }
}

function enterSolve(){
    if(event.keyCode == 13) {
        solve();
    }
}

function relations(){
    document.getElementById("relations").innerHTML = `${window.relationsMin} ~ ${window.relationsMax}`
}

function clearInput(){
    document.getElementById("input").value = ""
}